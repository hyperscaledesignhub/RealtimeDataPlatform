apiVersion: v1
kind: Namespace
metadata:
  name: iot-pipeline
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: iot-perf-producer
  namespace: iot-pipeline
  labels:
    app: iot-perf-producer
    component: perf-producer
spec:
  serviceName: iot-perf-producer
  replicas: 4  # Scale based on desired throughput
  selector:
    matchLabels:
      app: iot-perf-producer
  template:
    metadata:
      labels:
        app: iot-perf-producer
        component: perf-producer
    spec:
      # Place on producer nodes
      nodeSelector:
        workload: producer
      
      containers:
      - name: perf-producer
        image: 343218179954.dkr.ecr.us-west-2.amazonaws.com/bench-low-infra-iot-perf-producer:latest
        imagePullPolicy: Always
        
        # Use entrypoint script for device ID distribution
        env:
        # Pulsar Configuration
        - name: PULSAR_URL
          value: "pulsar://pulsar-proxy.pulsar.svc.cluster.local:6650"
        - name: PULSAR_TOPIC
          value: "persistent://public/default/iot-sensor-data"
        
        # Performance Configuration
        - name: MESSAGE_RATE
          value: "250000"  # 250K messages per second per pod
        - name: NUM_MESSAGES
          value: "0"  # Run indefinitely (0 = infinite)
        - name: STATS_INTERVAL
          value: "10"  # Stats every 10 seconds
        
        # Device ID Distribution Configuration
        - name: TOTAL_DEVICE_COUNT
          value: "100000"  # 100K total devices
        - name: NUM_REPLICAS
          value: "3"  # Must match the replicas count above
        
        # AVRO Configuration
        - name: USE_AVRO
          value: "true"
        
        # JVM Configuration
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC"
        
        # Pod identification for device ID calculation
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1000m"
        
        # Liveness probe
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep java | grep -v grep
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 3
        
        # Readiness probe
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep java | grep -v grep
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: iot-perf-producer
  namespace: iot-pipeline
  labels:
    app: iot-perf-producer
spec:
  clusterIP: None
  selector:
    app: iot-perf-producer
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: perf-producer-config
  namespace: iot-pipeline
data:
  README.txt: |
    IoT Performance Producer StatefulSet Configuration
    =================================================
    
    This producer uses the pulsar-sensor-perf binary (IoTPerformanceProducer)
    with automatic device ID distribution across multiple pods using StatefulSet.
    Uses AVRO serialization format for efficient data transmission.
    
    Configuration:
    - Replicas: 3 pods
    - Messages per second per pod: 250,000
    - Total throughput: 750,000 msg/sec
    - Total device count: 100,000 devices
    - Device ID distribution: Automatic per pod (StatefulSet ordinal)
    - Stats interval: 10 seconds
    
    StatefulSet Pod Names:
    - iot-perf-producer-0: Devices 1-33,333 (33,333 devices)
    - iot-perf-producer-1: Devices 33,334-66,666 (33,333 devices)  
    - iot-perf-producer-2: Devices 66,667-100,000 (33,334 devices)
    
    Features:
    - Predictable pod names with ordinal numbers (0, 1, 2)
    - Automatic device ID range distribution across pods
    - High-performance rate limiting per pod (250,000 msg/sec)
    - Distributed message generation with no overlap
    - Real-time statistics output
    - AVRO serialization for efficient data transmission
    
    Schema:
    - Device IDs: dev-0000001 to dev-0100000
    - Device Types: temperature_sensor, humidity_sensor, pressure_sensor, etc.
    - Customers: 1000 customers (cust-000000 to cust-000999)
    - Sites: 100 sites (site-00000 to site-00099)
    - 25+ sensor fields per message (temperature, humidity, pressure, etc.)
    
    Scaling:
    - To increase throughput: kubectl scale statefulset iot-perf-producer -n iot-pipeline --replicas=5
    - Device ID ranges automatically recalculate when scaling
    - To adjust per-pod rate: Update MESSAGE_RATE environment variable
    - To change total devices: Update TOTAL_DEVICE_COUNT environment variable
    
    Monitoring:
    - View logs: kubectl logs -f statefulset/iot-perf-producer -n iot-pipeline
    - View all pods: kubectl get pods -n iot-pipeline -l app=iot-perf-producer
    - View specific pod: kubectl logs iot-perf-producer-0 -n iot-pipeline
