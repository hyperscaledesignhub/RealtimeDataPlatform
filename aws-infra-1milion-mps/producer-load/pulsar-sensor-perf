#!/usr/bin/env bash
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Get the directory where this script is located
SCRIPT_DIR=$(dirname "$0")
SCRIPT_DIR=`cd -P $SCRIPT_DIR;pwd`

# log directory
PULSAR_LOG_DIR=${PULSAR_LOG_DIR:-"$SCRIPT_DIR/logs"}

DEFAULT_CLIENT_CONF=${PULSAR_CLIENT_CONF:-""}
DEFAULT_LOG_CONF=""

# Check for the java to use
if [[ -z $JAVA_HOME ]]; then
    JAVA=$(which java)
    if [ $? != 0 ]; then
        echo "Error: JAVA_HOME not set, and no java executable found in $PATH." 1>&2
        exit 1
    fi
else
    JAVA=$JAVA_HOME/bin/java
fi

# Set up classpath with our target directory
PULSAR_JAR="$SCRIPT_DIR/target/pulsar-testclient.jar"
PULSAR_CLASSPATH="$PULSAR_JAR:$SCRIPT_DIR/target/dependency/*"

if [ ! -f "$PULSAR_JAR" ]; then
    echo "Error: $PULSAR_JAR not found."
    echo "Make sure you've copied the target directory from the pulsar-testclient build."
    exit 1
fi

if [ -z "$PULSAR_PERFTEST_CONF" ]; then
    PULSAR_PERFTEST_CONF=$DEFAULT_CLIENT_CONF
fi

if [ -z "$PULSAR_LOG_CONF" ]; then
    PULSAR_LOG_CONF=$DEFAULT_LOG_CONF
fi

# Set up JVM options
OPTS="-Djava.net.preferIPv4Stack=true"
# Required to allow sun.misc.Unsafe on JDK 24 without warnings
# Also required for enabling unsafe memory access for Netty since 4.1.121.Final
if [[ $JAVA_MAJOR_VERSION -ge 23 ]]; then
  OPTS="--sun-misc-unsafe-memory-access=allow $OPTS"
fi

# Allow Netty to use reflection access
OPTS="$OPTS -Dio.netty.tryReflectionSetAccessible=true"
OPTS="$OPTS -Dorg.apache.pulsar.shade.io.netty.tryReflectionSetAccessible=true"

if [[ $JAVA_MAJOR_VERSION -gt 8 ]]; then
  OPTS="$OPTS --add-opens java.base/sun.net=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED"
  # Required by Pulsar client optimized checksum calculation on other than Linux x86_64 platforms
  # reflection access to java.util.zip.CRC32C
  OPTS="$OPTS --add-opens java.base/java.util.zip=ALL-UNNAMED"
fi

if [[ $JAVA_MAJOR_VERSION -ge 11 ]]; then
  # Required by Netty for optimized direct byte buffer access
  OPTS="$OPTS --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/jdk.internal.misc=ALL-UNNAMED"
fi

OPTS="-cp $PULSAR_CLASSPATH $OPTS"
OPTS="$OPTS $PULSAR_EXTRA_OPTS"

# log directory & file
PULSAR_LOG_APPENDER=${PULSAR_LOG_APPENDER:-"Console"}
PULSAR_LOG_FILE=${PULSAR_LOG_FILE:-"pulsar-sensor-perftest.log"}
PULSAR_LOG_IMMEDIATE_FLUSH="${PULSAR_LOG_IMMEDIATE_FLUSH:-"false"}"

#Configure log configuration system properties
OPTS="$OPTS -Dpulsar.log.appender=$PULSAR_LOG_APPENDER"
if [ -n "$PULSAR_LOG_LEVEL" ]; then
  OPTS="$OPTS -Dpulsar.log.level=$PULSAR_LOG_LEVEL"
fi
if [ -n "$PULSAR_LOG_ROOT_LEVEL" ]; then
  OPTS="$OPTS -Dpulsar.log.root.level=$PULSAR_LOG_ROOT_LEVEL"
elif [ -n "$PULSAR_LOG_LEVEL" ]; then
  OPTS="$OPTS -Dpulsar.log.root.level=$PULSAR_LOG_LEVEL"
fi
OPTS="$OPTS -Dpulsar.log.immediateFlush=$PULSAR_LOG_IMMEDIATE_FLUSH"
OPTS="$OPTS -Dpulsar.log.dir=$PULSAR_LOG_DIR"
OPTS="$OPTS -Dpulsar.log.file=$PULSAR_LOG_FILE"

# Change to script directory
cd "$SCRIPT_DIR"

exec $JAVA $OPTS org.apache.pulsar.testclient.IoTPerformanceProducer "$@"