apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-config
  namespace: iot-pipeline
data:
  users.xml: |
    <clickhouse>
      <users>
        <default>
          <password></password>
          <access_management>1</access_management>
        </default>
      </users>
    </clickhouse>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-init
  namespace: iot-pipeline
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS iot;
    USE iot;
    
    CREATE TABLE IF NOT EXISTS sensor_raw_data (
        sensor_id String,
        sensor_type String,
        location String,
        temperature Float64,
        humidity Float64,
        pressure Float64,
        battery_level Float64,
        status String,
        timestamp DateTime,
        manufacturer String,
        model String,
        firmware_version String,
        latitude Float64,
        longitude Float64
    ) ENGINE = MergeTree()
    PARTITION BY toYYYYMM(timestamp)
    ORDER BY (sensor_id, timestamp)
    TTL timestamp + INTERVAL 7 DAY;
    
    CREATE TABLE IF NOT EXISTS sensor_alerts (
        sensor_id String,
        sensor_type String,
        location String,
        temperature Float64,
        humidity Float64,
        battery_level Float64,
        alert_type String,
        alert_time DateTime
    ) ENGINE = MergeTree()
    PARTITION BY toYYYYMM(alert_time)
    ORDER BY (sensor_id, alert_time)
    TTL alert_time + INTERVAL 30 DAY;
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse
  namespace: iot-pipeline
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8123
      targetPort: 8123
    - name: native
      port: 9000
      targetPort: 9000
  selector:
    app: clickhouse
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse
  namespace: iot-pipeline
spec:
  serviceName: clickhouse
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse
  template:
    metadata:
      labels:
        app: clickhouse
    spec:
      containers:
        - name: clickhouse
          image: clickhouse/clickhouse-server:latest
          ports:
            - containerPort: 8123
              name: http
            - containerPort: 9000
              name: native
          volumeMounts:
            - name: clickhouse-data
              mountPath: /var/lib/clickhouse
          env:
            - name: CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
              value: "1"
            - name: CLICKHOUSE_PASSWORD
              value: ""
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
  volumeClaimTemplates:
    - metadata:
        name: clickhouse-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi