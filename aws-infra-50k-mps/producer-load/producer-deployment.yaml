apiVersion: v1
kind: Namespace
metadata:
  name: iot-pipeline
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-producer
  namespace: iot-pipeline
  labels:
    app: iot-producer
    component: producer
spec:
  replicas: 3  # Scale based on desired throughput
  selector:
    matchLabels:
      app: iot-producer
  template:
    metadata:
      labels:
        app: iot-producer
        component: producer
    spec:
      # Place on producer nodes
      nodeSelector:
        workload: bench-producer
      
      containers:
      - name: producer
        image: 343218179954.dkr.ecr.us-west-2.amazonaws.com/bench-low-infra-iot-producer:latest
        imagePullPolicy: Always
        
        env:
        - name: PULSAR_URL
          value: "pulsar://pulsar-proxy.pulsar.svc.cluster.local:6650"
        - name: PULSAR_TOPIC
          value: "persistent://public/default/iot-sensor-data"
        - name: MESSAGES_PER_SECOND
          value: "1000"  # Per pod - total = 1000 * replicas
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC"
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1000m"
        
        # Liveness probe
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep java | grep -v grep
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 3
        
        # Readiness probe
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep java | grep -v grep
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: producer-config
  namespace: iot-pipeline
data:
  README.txt: |
    IoT Producer Configuration
    ==========================
    
    This producer generates realistic IoT sensor data matching the
    benchmark.sensors_local schema in ClickHouse.
    
    Configuration:
    - Replicas: 3 (adjustable via deployment spec)
    - Messages per second per pod: 1000
    - Total throughput: 3000 msg/sec
    
    Schema:
    - Device IDs: 100,000 devices (dev-0000000 to dev-0099999)
    - Customers: 10,000 customers (cust-000000 to cust-009999)
    - Sites: 1,000 sites (site-00000 to site-00999)
    - Device Types: 20 types
    - 25+ sensor fields per message
    
    Scaling:
    - To increase throughput: kubectl scale deployment iot-producer -n iot-pipeline --replicas=5
    - To adjust per-pod rate: Update MESSAGES_PER_SECOND env var

