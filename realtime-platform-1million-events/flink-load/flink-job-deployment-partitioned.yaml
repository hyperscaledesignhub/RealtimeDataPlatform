apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: iot-flink-job
  namespace: flink-benchmark
spec:
  # Flink image with your consumer JAR
  image: 343218179954.dkr.ecr.us-west-2.amazonaws.com/bench-low-infra-flink-job:latest
  imagePullPolicy: Always  # Force pull latest image
  flinkVersion: v1_18
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "16"  # 16 slots per TaskManager (8 × 16 = 128 total)
    restart-strategy: fixed-delay
    restart-strategy.fixed-delay.attempts: "3"
    restart-strategy.fixed-delay.delay: "10s"
    
    # Checkpoint Configuration
    execution.checkpointing.interval: "60s"  # Checkpoint every 60 seconds
    execution.checkpointing.mode: EXACTLY_ONCE
    execution.checkpointing.timeout: "10min"
    execution.checkpointing.max-concurrent-checkpoints: "1"
    execution.checkpointing.min-pause: "30s"  # Min pause between checkpoints
    
    # Checkpoint Storage (S3 for production, local for dev/test)
    state.backend: rocksdb
    state.backend.incremental: "true"
    # For S3 (production):
    state.checkpoints.dir: s3://s3-platform-flink/flink-checkpoints/high-infra/
    state.savepoints.dir: s3://s3-platform-flink/flink-savepoints/high-infra/
    # For local filesystem (dev/test):
    #state.checkpoints.dir: file:///opt/flink/checkpoints
    #state.savepoints.dir: file:///opt/flink/savepoints
    
    # S3 Configuration - Force IRSA credential provider
    fs.s3a.aws.credentials.provider: com.amazonaws.auth.WebIdentityTokenCredentialsProvider
    s3.path.style.access: "false"
    
    # Checkpoint Retention
    execution.checkpointing.externalized-checkpoint-retention: RETAIN_ON_CANCELLATION
    execution.checkpointing.num-retained: "3"  # Keep last 3 checkpoints
    
    # State Backend Tuning (RocksDB)
    state.backend.rocksdb.predefined-options: SPINNING_DISK_OPTIMIZED_HIGH_MEM
    state.backend.rocksdb.thread.num: "4"
  
  serviceAccount: flink
  
  # JobManager Configuration
  jobManager:
    replicas: 1
    resource:
      memory: "1024m"
      cpu: 0.5
    
    # Place on Flink JobManager nodes
    podTemplate:
      spec:
        nodeSelector:
          workload: flink
          role: flink-jobmanager
        tolerations:
        - key: "flink"
          value: "jobmanager"
          effect: "NoSchedule"
        containers:
        - name: flink-main-container
          env:
          - name: PULSAR_URL
            value: "pulsar://pulsar-proxy.pulsar.svc.cluster.local:6650"
          - name: PULSAR_ADMIN_URL
            value: "http://pulsar-proxy.pulsar.svc.cluster.local:8080"
          - name: PULSAR_TOPIC
            value: "persistent://public/default/iot-sensor-data"
          - name: CLICKHOUSE_URL
            value: "jdbc:clickhouse://clickhouse-iot-cluster-repl.clickhouse.svc.cluster.local:8123/benchmark"
          volumeMounts:
          - name: flink-checkpoints
            mountPath: /opt/flink/checkpoints
          - name: flink-savepoints
            mountPath: /opt/flink/savepoints
        volumes:
        - name: flink-checkpoints
          emptyDir:
            sizeLimit: 5Gi
        - name: flink-savepoints
          emptyDir:
            sizeLimit: 5Gi
  
  # TaskManager Configuration - 8 TaskManagers for 8 partitions
  taskManager:
    replicas: 8  # 8 TaskManagers for 8 partitions
    resource:
      memory: "2048m"
      cpu: 1.0
    
    # Place on Flink TaskManager nodes
    podTemplate:
      spec:
        nodeSelector:
          workload: flink
          role: flink-taskmanager
        tolerations:
        - key: "flink"
          value: "taskmanager"
          effect: "NoSchedule"
        containers:
        - name: flink-main-container
          env:
          - name: PULSAR_URL
            value: "pulsar://pulsar-proxy.pulsar.svc.cluster.local:6650"
          - name: PULSAR_ADMIN_URL
            value: "http://pulsar-proxy.pulsar.svc.cluster.local:8080"
          - name: PULSAR_TOPIC
            value: "persistent://public/default/iot-sensor-data"
          - name: CLICKHOUSE_URL
            value: "jdbc:clickhouse://clickhouse-iot-cluster-repl.clickhouse.svc.cluster.local:8123/benchmark"
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          volumeMounts:
          - name: flink-checkpoints
            mountPath: /opt/flink/checkpoints
          - name: flink-savepoints
            mountPath: /opt/flink/savepoints
          - name: partition-script
            mountPath: /scripts
          command: ["/scripts/set-partition-index.sh"]
          args: ["/opt/flink/bin/taskmanager.sh", "start-foreground"]
        volumes:
        - name: flink-checkpoints
          emptyDir:
            sizeLimit: 10Gi  # TaskManagers need more space for state
        - name: flink-savepoints
          emptyDir:
            sizeLimit: 5Gi
        - name: partition-script
          configMap:
            name: partition-script
            defaultMode: 0755
  
  # Job Configuration
  job:
    jarURI: local:///opt/flink/usrlib/flink-job.jar
    entryClass: com.iot.pipeline.flink.JDBCFlinkConsumer
    parallelism: 64  # 8 partitions × 8 parallel tasks per partition = 64 total
    upgradeMode: savepoint  # Enable stateful upgrades with checkpoints
    state: running
    savepointTriggerNonce: 0  # Increment to manually trigger savepoint
